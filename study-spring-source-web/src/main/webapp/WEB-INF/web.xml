<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- 欢迎页配置 -->
    <welcome-file-list>
        <welcome-file>/WEB-INF/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 错误页配置 -->
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/page/404.jsp</location>
    </error-page>

    <!-- 加载 Spring 配置文件 -->
    <context-param>
        <!-- contextConfigLocation 不是必须的，如果不配置，则 SpringMVC 的配置文件默认在 WEB-INF/servlet的name+"-servlet.xml" -->
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring-mvc.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <description>request 监听器</description>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- 会话超时配置 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- 加载 SpringMVC 配置文件 -->
    <servlet>
        <servlet-name>spring-mvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-mvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 编码过滤器 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 测试 filter、servlet、listener 的执行顺序 -->
    <filter>
        <filter-name>testFilter</filter-name>
        <filter-class>com.study.filter.TestFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>testFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>testServlet</servlet-name>
        <servlet-class>com.study.servlet.TestServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>testServlet</servlet-name>
        <!-- 这儿写成 * 会和 DispatcherServlet 冲突。web.xml 中通配符得三种配置方式：绝对通配符(精确匹配)，如/xx；模糊通配符，如/xx/*；后缀通配符，如*.xx -->
        <url-pattern>/test/servlet.do</url-pattern>
    </servlet-mapping>
    <listener>
        <listener-class>com.study.listener.TestListener</listener-class>
    </listener>
</web-app>